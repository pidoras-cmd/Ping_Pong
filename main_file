# from pygame import *
# from random import randint 
# win = display.set_mode((700, 500))
# win_width = 700
# win_height = 500
# display.set_caption('Шутер крутой')
# bg = transform.scale(image.load('galaxy.jpg'), (win_width, win_height))

# clock = time.Clock()
# FPS = 60
# lost = 0
# kill = 0
# mixer.init()
# mixer.music.load('space.ogg')
# mixer.music.play()
# fire_sound = mixer.Sound('fire.ogg')
# font.init()

# font1 = font.SysFont(Arial, 40)
# font2 = font.SysFont(Arial, 80)
# lose = font2.render('Вы проиграли',1,(255,0,0))
# won = font2.render('Вы выйграли',1,(0,255,0))

# class GameSprite(sprite.Sprite):
#     def __init__(self, pImage, px, py, pSpeed,imageWidth,imageHeight):
#         super().__init__()
#         self.image = transform.scale(image.load(pImage), (imageWidth,imageHeight))
#         self.speed = pSpeed
#         self.rect = self.image.get_rect()
#         self.rect.x = px
#         self.rect.y = py
#     def reset(self):
#         win.blit(self.image, (self.rect.x, self.rect.y))

# class Player(GameSprite):
#     def update(self):
#         keys = key.get_pressed()
#         if keys[K_a] and self.rect.x > 5:
#             self.rect.x -= self.speed
#         if keys[K_d] and self.rect.x < 650:
#             self.rect.x += self.speed
#     def fire(self):
#         bullet1 = Bullet('bullet.png',self.rect.centerx-7,self.rect.top,-15,15,20)
#         bullets.add(bullet1)

# class Enemy(GameSprite):
#     def update(self):
#         self.rect.y += self.speed
#         global lost
#         if self.rect.y > win_height:
#             self.rect.y = 0 
#             self.rect.x = randint(50,win_width-80)
#             lost += 1

# class Bullet(GameSprite):
#     def update(self):
#         self.rect.y += self.speed
#         if self.rect.y < 0:
#             self.kill()

        
# rocket = Player('rocket.png', 350, 420, 5,70,70)
# ufo1 = Enemy('ufo.png', 350, 30, 1,80,50)
# ufo2 = Enemy('ufo.png', 450, 100, 1,80,50)
# ufo3 = Enemy('ufo.png', 250, 70, 1,80,50)
# ufo4 = Enemy('ufo.png', 150, 60, 1,80,50)
# ufo5 = Enemy('ufo.png', 650, 90, 1,80,50)

# bullets = sprite.Group()

# ufoshki = sprite.Group()
# ufoshki.add(ufo1)
# ufoshki.add(ufo2)
# ufoshki.add(ufo3)
# ufoshki.add(ufo4)
# ufoshki.add(ufo5)
# finish = False
# game = True
# while game:
#     display.update()
#     for e in event.get():
#         if e.type == QUIT:
#             game = False
#         elif e.type == KEYDOWN:
#             if e.key == K_SPACE:
#                 rocket.fire()
#                 fire_sound.play()
#     if finish != True:
#         win.blit(bg,(0, 0))
#         clock.tick(FPS)
#         rocket.update()
#         rocket.reset()
#         ufoshki.draw(win)
#         ufoshki.update() 
#         bullets.draw(win)
#         bullets.update() 
#         text_lose = font1.render(
#         'Пропущено:' + str(lost),1,(255,255,255)
#         )
#         text_kill = font1.render(
#         'Убито:' + str(kill),1,(255,255,255)
#         )                 
#         win.blit(text_lose,(20,20))
#         win.blit(text_kill,(580,20))   


#         if sprite.spritecollide(rocket, ufoshki, False): 
#             finish = True 
#             win.blit(lose, (200, 200)) 

       
#         if lost >= 3: 
#             finish = True 
#             win.blit(lose, (200, 200))

#     else: 
#         win.blit(lose, (200, 200))

from pygame import *

win = display.set_mode((700, 500))
win_width = 700
win_height = 500
display.set_caption('Пинг Понг')
bg = transform.scale(image.load('sky.jpg'), (win_width, win_height))

speed_x = 3
speed_y = 3

class GameSprite(sprite.Sprite):
     def __init__(self, pImage, px, py, pSpeed,imageWidth,imageHeight):
         super().__init__()
         self.image = transform.scale(image.load(pImage), (imageWidth,imageHeight))
         self.speed = pSpeed
         self.rect = self.image.get_rect()
         self.rect.x = px
         self.rect.y = py
     def reset(self):
         win.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_l(self):
         keys = key.get_pressed()
         if keys[K_w] and self.rect.y > 5:
             self.rect.y -= self.speed
         if keys[K_s] and self.rect.y < 425:
             self.rect.y += self.speed
    def update_r(self):
         keys = key.get_pressed()
         if keys[K_UP] and self.rect.y > 5:
             self.rect.y -= self.speed
         if keys[K_DOWN] and self.rect.y < 425:
             self.rect.y += self.speed

font.init()
font2 = font.SysFont(None, 40)
lose1 = font2.render('1p lose',True,(255,0,0))
lose2 = font2.render('2p lose',True,(255,0,0))


racket1 = Player('racket.png', 25, 250, 5,35,70)
racket2 = Player('racket.png', 625, 250, 5,35,70)
ball = GameSprite('balls.png', 350, 250, 0, 50, 50)

game = True
finish = False
while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
    if finish != True:
        ball.rect.x += speed_x
        ball.rect.y += speed_y
        win.blit(bg,(0, 0))
        racket1.update_l()
        racket1.reset()
        racket2.update_r()
        racket2.reset()
        ball.reset()
    if ball.rect.y > win_height - 50 or ball.rect.y < 0:
        speed_y *= -1
    if sprite.collide_rect(racket1, ball) or sprite.collide_rect(racket2, ball):
        speed_x *= -1
    if ball.rect.x < 0:
        finish = True
        win.blit(lose1, (200, 200))
    if ball.rect.x > 675:
        finish = True
        win.blit(lose2, (200, 200))
    display.update()
